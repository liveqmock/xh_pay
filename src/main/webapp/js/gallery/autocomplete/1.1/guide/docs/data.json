{
    "project": {
        "name": "autocomplete",
        "description": "",
        "version": "1.1"
    },
    "files": {
        "1.1/aria.js": {
            "name": "1.1/aria.js",
            "modules": {
                "autocomplete-aria": 1
            },
            "classes": {
                "AutocompleteAria": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "1.1/base.js": {
            "name": "1.1/base.js",
            "modules": {
                "autocomplete": 1
            },
            "classes": {
                "AutoCompleteBase": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "1.1/hot.js": {
            "name": "1.1/hot.js",
            "modules": {
                "autocomplete-hot": 1
            },
            "classes": {
                "AutocompleteHot": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "1.1/index-aria.js": {
            "name": "1.1/index-aria.js",
            "modules": {},
            "classes": {
                "AutocompleteAll": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "1.1/index.js": {
            "name": "1.1/index.js",
            "modules": {},
            "classes": {
                "Autocomplete": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "1.1/multiple.js": {
            "name": "1.1/multiple.js",
            "modules": {
                "autocomplete/multiple": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "1.1/rich.js": {
            "name": "1.1/rich.js",
            "modules": {
                "autocomplete-rich": 1
            },
            "classes": {
                "AutocompleteRich": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "autocomplete": {
            "name": "autocomplete",
            "submodules": {
                "autocomplete-aria": 1,
                "autocomplete-hot": 1,
                "autocomplete-rich": 1
            },
            "classes": {
                "AutocompleteAria": 1,
                "AutoCompleteBase": 1,
                "AutocompleteHot": 1,
                "AutocompleteAll": 1,
                "Autocomplete": 1,
                "AutocompleteRich": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "1.1/rich.js",
            "line": 10,
            "description": "自动完成组件",
            "itemtype": "main",
            "fileoverview": "自动完成组件",
            "author": "舒克<shuke.cl@taobao.com>"
        },
        "autocomplete-aria": {
            "name": "autocomplete-aria",
            "submodules": {},
            "classes": {
                "AutocompleteAria": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "autocomplete",
            "namespace": "",
            "file": "1.1/aria.js",
            "line": 7,
            "description": "AutocompleteAria主要基于AutocompleteHot，盲人用户的支持，增加组件的可用性"
        },
        "autocomplete-hot": {
            "name": "autocomplete-hot",
            "submodules": {},
            "classes": {
                "AutocompleteHot": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "autocomplete",
            "namespace": "",
            "file": "1.1/hot.js",
            "line": 7,
            "description": "自动完成组件"
        },
        "autocomplete/multiple": {
            "name": "autocomplete/multiple",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "1.1/multiple.js",
            "line": 1,
            "fileoverview": "自动完成组件继承-多输入",
            "author": "弘树<tiehang.lth@taobao.com>"
        },
        "autocomplete-rich": {
            "name": "autocomplete-rich",
            "submodules": {},
            "classes": {
                "AutocompleteRich": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "autocomplete",
            "namespace": "",
            "file": "1.1/rich.js",
            "line": 10,
            "description": "AutocompleteRich主要基于AutocompleteBase，利用afterQueryChange和results两个事件创建包含更多交互的富应用"
        }
    },
    "classes": {
        "AutocompleteAria": {
            "name": "AutocompleteAria",
            "shortname": "AutocompleteAria",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "autocomplete",
            "submodule": "autocomplete-aria",
            "namespace": "",
            "file": "1.1/aria.js",
            "line": 7,
            "description": "AutocompleteAria主要基于AutocompleteHot，盲人用户的支持，增加组件的可用性",
            "extends": "AutocompleteBase"
        },
        "AutoCompleteBase": {
            "name": "AutoCompleteBase",
            "shortname": "AutoCompleteBase",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "autocomplete",
            "namespace": "",
            "file": "1.1/base.js",
            "line": 8,
            "description": "AutocompleteBase\n 自动完成组件的基类，主要提供底层数据逻辑的处理，分发两个事件<b>results afterQueryChange<b>",
            "uses": [
                "Overlay"
            ],
            "is_constructor": 1
        },
        "AutocompleteHot": {
            "name": "AutocompleteHot",
            "shortname": "AutocompleteHot",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "AutocompleteAll",
                "Autocomplete"
            ],
            "module": "autocomplete",
            "submodule": "autocomplete-hot",
            "namespace": "",
            "file": "1.1/hot.js",
            "line": 7,
            "description": "自动完成组件热门推荐",
            "extends": "AutocompleteBase",
            "uses": [
                "Overlay"
            ],
            "is_constructor": 1,
            "params": [
                {
                    "name": "配置项",
                    "description": "",
                    "type": "Object"
                }
            ]
        },
        "AutocompleteAll": {
            "name": "AutocompleteAll",
            "shortname": "AutocompleteAll",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "autocomplete",
            "namespace": "",
            "file": "1.1/index-aria.js",
            "line": 2,
            "description": "通用的自动完成组件，包括盲人支持模块",
            "is_constructor": 1,
            "extends": "Base",
            "uses": [
                "AutocompleteBase",
                "AutocompleteRich",
                "AutocompleteHot"
            ]
        },
        "Autocomplete": {
            "name": "Autocomplete",
            "shortname": "Autocomplete",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "autocomplete",
            "namespace": "",
            "file": "1.1/index.js",
            "line": 7,
            "description": "通用的自动完成组件",
            "is_constructor": 1,
            "extends": "Base",
            "uses": [
                "AutocompleteBase",
                "AutocompleteRich",
                "AutocompleteHot"
            ]
        },
        "AutocompleteRich": {
            "name": "AutocompleteRich",
            "shortname": "AutocompleteRich",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "AutocompleteAll",
                "Autocomplete"
            ],
            "module": "autocomplete",
            "submodule": "autocomplete-rich",
            "namespace": "",
            "file": "1.1/rich.js",
            "line": 10,
            "description": "AutocompleteRich主要基于AutocompleteBase，利用afterQueryChange和results两个事件创建包含更多交互的富应用",
            "extends": "S.Base"
        }
    },
    "classitems": [
        {
            "file": "1.1/aria.js",
            "line": 103,
            "description": "生成一个二维数组，数组每一项代表一个节点,完成上下左右键盘键操作功能，同时完成节点数据绑定\n[[1, 2, 3, 4, 5, 6, 7, 8],\n [9,10,11,12,13,14,15,16],\n [......................]]",
            "params": [
                {
                    "name": "nodes",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "AutocompleteAria",
            "module": "autocomplete",
            "submodule": "autocomplete-aria"
        },
        {
            "file": "1.1/aria.js",
            "line": 140,
            "description": "选择位于上方的节点",
            "params": [
                {
                    "name": "item",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "AutocompleteAria",
            "module": "autocomplete",
            "submodule": "autocomplete-aria"
        },
        {
            "file": "1.1/aria.js",
            "line": 154,
            "description": "选择位于下方节点",
            "params": [
                {
                    "name": "item",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "AutocompleteAria",
            "module": "autocomplete",
            "submodule": "autocomplete-aria"
        },
        {
            "file": "1.1/aria.js",
            "line": 168,
            "description": "选择左侧节点",
            "params": [
                {
                    "name": "item",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "AutocompleteAria",
            "module": "autocomplete",
            "submodule": "autocomplete-aria"
        },
        {
            "file": "1.1/aria.js",
            "line": 186,
            "description": "选择右侧节点",
            "params": [
                {
                    "name": "item",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "AutocompleteAria",
            "module": "autocomplete",
            "submodule": "autocomplete-aria"
        },
        {
            "file": "1.1/aria.js",
            "line": 204,
            "description": "选择指定坐标的节点,当一步没有找到时，根据direction进行下一步的查找",
            "params": [
                {
                    "name": "x",
                    "description": "二维数组横坐标"
                },
                {
                    "name": "y",
                    "description": "二位数组纵坐标"
                },
                {
                    "name": "direction",
                    "description": "来源的键盘键"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "AutocompleteAria",
            "module": "autocomplete",
            "submodule": "autocomplete-aria"
        },
        {
            "file": "1.1/base.js",
            "line": 20,
            "description": "query发生变化",
            "itemtype": "event",
            "name": "afterQueryChange",
            "params": [
                {
                    "name": "newVal",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "prevVal",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "AutoCompleteBase",
            "module": "autocomplete"
        },
        {
            "file": "1.1/base.js",
            "line": 35,
            "description": "使用缓存，当source是后端提供的数据接口时，将同样的请求做缓存",
            "itemtype": "attribute",
            "name": "enableCache",
            "default": "true",
            "type": "boolean",
            "class": "AutoCompleteBase",
            "module": "autocomplete"
        },
        {
            "file": "1.1/base.js",
            "line": 44,
            "itemtype": "attribute",
            "name": "inputNode",
            "default": "null",
            "type": "String|NodeList",
            "class": "AutoCompleteBase",
            "module": "autocomplete"
        },
        {
            "file": "1.1/base.js",
            "line": 58,
            "description": "允许返回的最大值，设置为0表示不限制",
            "itemtype": "attribute",
            "name": "maxResults",
            "default": "null",
            "type": "String|NodeList",
            "class": "AutoCompleteBase",
            "module": "autocomplete"
        },
        {
            "file": "1.1/base.js",
            "line": 67,
            "description": "最小查询字符串长度，输入框的值为空时，不进行查询",
            "itemtype": "attribute",
            "name": "minQuerylengt",
            "type": "number",
            "default": "1",
            "class": "AutoCompleteBase",
            "module": "autocomplete"
        },
        {
            "file": "1.1/base.js",
            "line": 76,
            "description": "kissy jsonp 的配置项，用于接口的callback的key不是'callback'时",
            "itemtype": "attribute",
            "name": "jsonpCallback",
            "type": "String",
            "default": "callback",
            "class": "AutoCompleteBase",
            "module": "autocomplete"
        },
        {
            "file": "1.1/base.js",
            "line": 91,
            "description": "延时查询,避免用户连续输入时密集发送查询请求",
            "itemtype": "attribute",
            "name": "queryDelay",
            "type": "number",
            "default": "100",
            "class": "AutoCompleteBase",
            "module": "autocomplete"
        },
        {
            "file": "1.1/base.js",
            "line": 100,
            "description": "查询字符分隔符,如果配置了这个值，将以此作为分隔符将输入框的值分割为数组，取数组的最后一个值作为查询参数.\n用于输入框支持多项输入",
            "itemtype": "attribute",
            "name": "queryDelimiter",
            "type": "String",
            "default": "null",
            "class": "AutoCompleteBase",
            "module": "autocomplete"
        },
        {
            "file": "1.1/base.js",
            "line": 110,
            "description": "数据源的请求模板.",
            "type": "String",
            "class": "AutoCompleteBase",
            "module": "autocomplete"
        },
        {
            "file": "1.1/base.js",
            "line": 118,
            "description": "数据结果过滤",
            "type": "Array",
            "class": "AutoCompleteBase",
            "module": "autocomplete"
        },
        {
            "file": "1.1/base.js",
            "line": 122,
            "description": "数据过滤器，要对本地数据或者远程返回数据进行处理时",
            "itemtype": "attribute",
            "name": "resultFilter",
            "type": "Function",
            "default": "null",
            "class": "AutoCompleteBase",
            "module": "autocomplete"
        },
        {
            "file": "1.1/base.js",
            "line": 131,
            "description": "数据结果初始化",
            "type": ": Function",
            "class": "AutoCompleteBase",
            "module": "autocomplete"
        },
        {
            "file": "1.1/base.js",
            "line": 135,
            "description": "处理数据项展示的函数",
            "itemtype": "attribute",
            "name": "resultFormatter",
            "type": "Function",
            "default": "null",
            "class": "AutoCompleteBase",
            "module": "autocomplete"
        },
        {
            "file": "1.1/base.js",
            "line": 151,
            "description": "数据结果返回时的第一个处理函数，指定数组位置,同时可以对数据源进行二次加工",
            "itemtype": "attribute",
            "name": "resultListLocator",
            "type": "String | Function",
            "default": "null",
            "class": "AutoCompleteBase",
            "module": "autocomplete"
        },
        {
            "file": "1.1/base.js",
            "line": 161,
            "description": "存储当前的查询结果",
            "class": "AutoCompleteBase",
            "module": "autocomplete"
        },
        {
            "file": "1.1/base.js",
            "line": 168,
            "description": "指定每一个数据项被选中后填入到输入框的内容,可以指定一个字段或者用函数返回一个拼接的字段",
            "itemtype": "attribute",
            "name": "resultTextLocator",
            "type": "String | Function",
            "default": "null",
            "class": "AutoCompleteBase",
            "module": "autocomplete"
        },
        {
            "file": "1.1/base.js",
            "line": 178,
            "description": "数据源",
            "class": "AutoCompleteBase",
            "module": "autocomplete"
        },
        {
            "file": "1.1/base.js",
            "line": 185,
            "description": "如果是服务端返回数据，指定数据源的charset",
            "itemtype": "attribute",
            "name": "sourceCharset",
            "type": "string",
            "default": "gbk",
            "class": "AutoCompleteBase",
            "module": "autocomplete"
        },
        {
            "file": "1.1/base.js",
            "line": 194,
            "description": "设置输入框的值,可以用于区分是用户通过UI输入造成的valueChange还是代码通过 setValue()改变的输入框的值",
            "class": "AutoCompleteBase",
            "module": "autocomplete"
        },
        {
            "file": "1.1/base.js",
            "line": 201,
            "description": "开启浏览器默认的自动填充行为",
            "itemtype": "attribute",
            "name": "allowBrowserAutocomplete",
            "type": "Boolean",
            "default": "false",
            "class": "AutoCompleteBase",
            "module": "autocomplete"
        },
        {
            "file": "1.1/base.js",
            "line": 229,
            "description": "渲染组件",
            "access": "private",
            "tagname": "",
            "class": "AutoCompleteBase",
            "module": "autocomplete"
        },
        {
            "file": "1.1/base.js",
            "line": 236,
            "description": "事件处理中心",
            "access": "private",
            "tagname": "",
            "class": "AutoCompleteBase",
            "module": "autocomplete"
        },
        {
            "file": "1.1/base.js",
            "line": 255,
            "description": "query 事件后默认出发函数",
            "params": [
                {
                    "name": "query",
                    "description": ""
                },
                {
                    "name": "requestTemplate",
                    "description": ""
                }
            ],
            "class": "AutoCompleteBase",
            "module": "autocomplete"
        },
        {
            "file": "1.1/base.js",
            "line": 283,
            "description": "实力的 value 属性被set后触发",
            "access": "private",
            "tagname": "",
            "class": "AutoCompleteBase",
            "module": "autocomplete"
        },
        {
            "file": "1.1/base.js",
            "line": 340,
            "description": "数据查询返回结果后，对数据进行过滤排序，文本替换,高亮等操作",
            "access": "private",
            "tagname": "",
            "class": "AutoCompleteBase",
            "module": "autocomplete"
        },
        {
            "file": "1.1/base.js",
            "line": 420,
            "description": "匹配到的数据返回且发生变化",
            "itemtype": "event",
            "name": "results",
            "params": [
                {
                    "name": "推荐的数据结果",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "查询的关键字",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "AutoCompleteBase",
            "module": "autocomplete"
        },
        {
            "file": "1.1/base.js",
            "line": 428,
            "description": "数据返回成功后的回调处理方法",
            "params": [
                {
                    "name": "data",
                    "description": ""
                },
                {
                    "name": "request",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "AutoCompleteBase",
            "module": "autocomplete"
        },
        {
            "file": "1.1/base.js",
            "line": 443,
            "description": "setter 启用缓存",
            "access": "private",
            "tagname": "",
            "class": "AutoCompleteBase",
            "module": "autocomplete"
        },
        {
            "file": "1.1/base.js",
            "line": 510,
            "description": "jsonp格式的数据源",
            "params": [
                {
                    "name": "source",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "AutoCompleteBase",
            "module": "autocomplete"
        },
        {
            "file": "1.1/base.js",
            "line": 581,
            "description": "设置autocomplete属性，关闭浏览器默认的自动完成功能",
            "access": "private",
            "tagname": "",
            "class": "AutoCompleteBase",
            "module": "autocomplete"
        },
        {
            "file": "1.1/hot.js",
            "line": 28,
            "description": "热门推荐的模板，数据源来自hotSource参数，内容渲染到this.hotNode节点内",
            "itemtype": "attribute",
            "name": "hotTemplate",
            "type": "String",
            "default": "'<div class=\"ks-ac-hot-city\"><div class=\"ks-ac-acinput-hot-tit\">热门城市/国家(支持汉字/拼音/英文字母)</div>' +\n                        '<ul class=\"tab-nav\">{{#results}}<li class=\"J_TabItem\">{{tabname}}</li>{{/results}}</ul>' +\n                        '<div class=\"tab-content J_TabContent\">{{#results}}' +\n                        '<div class=\"tab-pannel J_Pannel\">{{#tabdata}}<dl><dt>{{dt}}</dt><dd>{{#dd}}<span><a data-sid=\"{{sid}}\" class=\"J_AcItem\" tabindex=\"-1\" href=\"javascript:void(0);\" target=\"_self\">{{cityName}}</a></span>{{/dd}}</dd></dl>{{/tabdata}}</div>{{/results}}</div></div>'",
            "class": "AutocompleteHot",
            "module": "autocomplete",
            "submodule": "autocomplete-hot"
        },
        {
            "file": "1.1/hot.js",
            "line": 43,
            "description": "热门推荐的宽度",
            "itemtype": "attribute",
            "name": "hotWidth",
            "type": "number|NodeList|null",
            "default": "null",
            "class": "AutocompleteHot",
            "module": "autocomplete",
            "submodule": "autocomplete-hot"
        },
        {
            "file": "1.1/hot.js",
            "line": 52,
            "description": "热门推荐的数据源，支持JSONP和本地数据，传参类型为字符串时将被判断为JSONP数据源",
            "itemtype": "attribute",
            "name": "hotSource",
            "type": "String|Object",
            "default": "null",
            "class": "AutocompleteHot",
            "module": "autocomplete",
            "submodule": "autocomplete-hot"
        },
        {
            "file": "1.1/hot.js",
            "line": 62,
            "description": "远程热门推荐的charset,默认和页面保持一致",
            "itemtype": "attribute",
            "name": "hotSourceCharset",
            "type": "string",
            "default": "undefined",
            "class": "AutocompleteHot",
            "module": "autocomplete",
            "submodule": "autocomplete-hot"
        },
        {
            "file": "1.1/hot.js",
            "line": 71,
            "description": "热门推荐数据源指定为JSONP时，callback的参数名",
            "itemtype": "attribute",
            "name": "",
            "type": "String",
            "default": "",
            "class": "AutocompleteHot",
            "module": "autocomplete",
            "submodule": "autocomplete-hot"
        },
        {
            "file": "1.1/hot.js",
            "line": 80,
            "description": "当前热门推荐被选中tab",
            "itemtype": "attribute",
            "name": "hotActiveTab",
            "type": "number",
            "default": "null",
            "class": "AutocompleteHot",
            "module": "autocomplete",
            "submodule": "autocomplete-hot"
        },
        {
            "file": "1.1/hot.js",
            "line": 89,
            "description": "热门数据格式化同时要求数据实现绑定",
            "itemtype": "attribute",
            "name": "hotResultsFormatter",
            "type": "function",
            "default": "function (data){\n                        var results = {};\n                        S.each(data.results,function (_iObj){\n                            S.each(_iObj.tabdata , function (_jObj){\n                                S.each(_jObj.dd , function (_kObj){\n                                    var id = 'hot_source_id_'+ S.guid();//必需\n                                    _kObj.raw = S.mix({}, _kObj);\n                                    _kObj.sid = id;//必需\n                                    _kObj.text = _kObj.cityName;\n                                    results[id] = _kObj;\n                                })\n                            });\n                        });\n                        return results;\n                    }",
            "class": "AutocompleteHot",
            "module": "autocomplete",
            "submodule": "autocomplete-hot"
        },
        {
            "file": "1.1/hot.js",
            "line": 126,
            "description": "提供一个数据的预处理的机制，要求返回数据对象.",
            "itemtype": "attribute",
            "name": "hotResultsLocator",
            "type": "function",
            "default": "null",
            "class": "AutocompleteHot",
            "module": "autocomplete",
            "submodule": "autocomplete-hot"
        },
        {
            "file": "1.1/hot.js",
            "line": 135,
            "description": "热门推荐层的可见状态",
            "itemtype": "attribute",
            "name": "hotVisible",
            "type": "boolean",
            "default": "false",
            "class": "AutocompleteHot",
            "module": "autocomplete",
            "submodule": "autocomplete-hot"
        },
        {
            "file": "1.1/hot.js",
            "line": 245,
            "description": "初始化热门推荐",
            "access": "private",
            "tagname": "",
            "class": "AutocompleteHot",
            "module": "autocomplete",
            "submodule": "autocomplete-hot"
        },
        {
            "file": "1.1/hot.js",
            "line": 252,
            "description": "HOT的渲染",
            "params": [
                {
                    "name": "data",
                    "description": "依赖的数据源"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "AutocompleteHot",
            "module": "autocomplete",
            "submodule": "autocomplete-hot"
        },
        {
            "file": "1.1/hot.js",
            "line": 285,
            "description": "修改hotSource时重置HOT的状态",
            "access": "private",
            "tagname": "",
            "class": "AutocompleteHot",
            "module": "autocomplete",
            "submodule": "autocomplete-hot"
        },
        {
            "file": "1.1/multiple.js",
            "line": 17,
            "description": "容器元素",
            "type": "{Element}",
            "class": "AutocompleteRich",
            "module": "autocomplete/multiple"
        },
        {
            "file": "1.1/multiple.js",
            "line": 52,
            "description": "初始化Multiple输入框dom结构调整，绑定keydown事件",
            "class": "AutocompleteRich",
            "module": "autocomplete/multiple"
        },
        {
            "file": "1.1/multiple.js",
            "line": 65,
            "description": "事件绑定",
            "class": "AutocompleteRich",
            "module": "autocomplete/multiple"
        },
        {
            "file": "1.1/multiple.js",
            "line": 95,
            "description": "添加item",
            "params": [
                {
                    "name": "item",
                    "description": ""
                }
            ],
            "class": "AutocompleteRich",
            "module": "autocomplete/multiple"
        },
        {
            "file": "1.1/multiple.js",
            "line": 112,
            "description": "删除item",
            "params": [
                {
                    "name": "item",
                    "description": ""
                }
            ],
            "class": "AutocompleteRich",
            "module": "autocomplete/multiple"
        },
        {
            "file": "1.1/multiple.js",
            "line": 125,
            "description": "查找item在array中的序号",
            "params": [
                {
                    "name": "array",
                    "description": ""
                },
                {
                    "name": "item",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "access": "private",
            "tagname": "",
            "class": "AutocompleteRich",
            "module": "autocomplete/multiple"
        },
        {
            "file": "1.1/multiple.js",
            "line": 145,
            "description": "展示已输入列表",
            "class": "AutocompleteRich",
            "module": "autocomplete/multiple"
        },
        {
            "file": "1.1/rich.js",
            "line": 1,
            "description": "RICH 包含UI所有交互逻辑",
            "class": "AutocompleteRich",
            "module": "autocomplete/multiple"
        },
        {
            "file": "1.1/rich.js",
            "line": 44,
            "description": "显示提示框的宽度设定。传入一个节点时，会以此节点的宽度作为组件宽度，默认null时，会自动设定为输入框的宽度",
            "itemtype": "attribute",
            "name": "width",
            "type": "Number|NodeList|null",
            "default": "null",
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 54,
            "description": "在输入框失去焦点时有推联想搜索结果，启用自动回填当前被激活的数据项",
            "itemtype": "attribute",
            "name": "enableAutoFill",
            "type": "Boolean",
            "default": "true",
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 63,
            "description": "有推荐结果时，默认选中第一项",
            "itemtype": "attribute",
            "name": "activeFirstItem",
            "type": "Boolean",
            "default": "true",
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 72,
            "description": "当前的激活项",
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 78,
            "description": "当前的HOVER项",
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 85,
            "description": "提示层可见状态发送变化时的事件",
            "itemtype": "event",
            "name": "afterVisibleChange",
            "params": [
                {
                    "name": "e.newVal",
                    "description": "e.prevVal",
                    "type": "Boolean"
                }
            ],
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 93,
            "description": "推荐的结果的LIST可见状态发生变化时触发",
            "itemtype": "event",
            "name": "afterResultsListVisibleChange",
            "params": [
                {
                    "name": "e.newVal",
                    "description": "e.prevVal",
                    "type": "Boolean"
                }
            ],
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 101,
            "description": "启用当无推荐结果时展示提示信息功能",
            "itemtype": "attribute",
            "name": "enableNoResultsMessage",
            "type": "boolean",
            "default": "true",
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 110,
            "description": "message的可见状态",
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 116,
            "description": "对齐配置",
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 119,
            "description": "提示层的位置的配置，",
            "itemtype": "attribute",
            "name": "align",
            "type": "Object",
            "default": "{\n                        node : null,\n                        points : ['bl', 'tl'],\n                        offset : [0,-1],\n                        overflow:{\n                            adjustX: 0, // 当对象不能处于可显示区域时，自动调整横坐标\n                            adjustY: 0// 当对象不能处于可显示区域时，自动调整纵坐标\n                        }\n                    }",
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 145,
            "description": "overlay组件的zIndex配置",
            "itemtype": "attribute",
            "name": "zIndex",
            "type": "number",
            "default": "10000",
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 154,
            "description": "最外层容器HTML片段",
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 157,
            "description": "层的基础HTML模板结构",
            "itemtype": "attribute",
            "name": "boundingBoxTemplate",
            "type": "String",
            "default": "'<div class=\"ks-ac-header\"></div>' +\n        '<div class=\"ks-ac-body\">' +\n        '   <div class=\"ks-ac-message J_AcMessage\"></div>' +\n        '   <div class=\"ks-ac-content J_AcContent\">' +\n        '       <div class=\"J_HotList\"></div>' +\n        '       <div class=\"J_ResultsList\"></div>' +\n        '   </div>' +\n        '</div>' +\n        '<div class=\"ks-ac-footer\"><span></span></div>'",
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 182,
            "description": "推荐结果的外层容器HTML模板",
            "itemtype": "attribute",
            "name": "listNodeTemplate",
            "type": "String",
            "default": "<div class=\"ks-ac-list\"></div>",
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 191,
            "description": "推荐结果单个数据项的外层容器HTML模板",
            "itemtype": "attribute",
            "name": "itemNodeTemplate",
            "type": "String",
            "default": "<div class=\"ks-ac-item\"></div>",
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 200,
            "description": "没有查询结果时的提示模板",
            "itemtype": "attribute",
            "name": "noResultsMessage",
            "type": "String",
            "default": "没有\"<span class=\"ks-ac-message-hightlight\">{query}</span>\"相关的推荐",
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 209,
            "description": "添加一个层的自定义className，用于个性化定制样式",
            "itemtype": "attribute",
            "name": "wapperClass",
            "type": "String",
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 217,
            "description": "clickoutside时需要排除在外的节点",
            "itemtype": "attribute",
            "name": "trigger",
            "type": "Array",
            "default": "[]",
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 270,
            "description": "生成搜索结果列表",
            "params": [
                {
                    "name": "items",
                    "description": "列表所依赖的数据"
                }
            ],
            "return": {
                "description": "返回documentFragment;",
                "type": "NodeList"
            },
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 282,
            "description": "创建搜索结果的子项",
            "params": [
                {
                    "name": "item",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "access": "private",
            "tagname": "",
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 293,
            "description": "绑定事件",
            "access": "private",
            "tagname": "",
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 331,
            "description": "搜索结果列表事件绑定",
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 348,
            "description": "搜索结果返回时响应",
            "params": [
                {
                    "name": "e",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 384,
            "description": "显示信息",
            "itemtype": "method",
            "name": "showMessage",
            "params": [
                {
                    "name": "msg",
                    "description": "错误提示信息",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 398,
            "description": "重新定位容器对齐",
            "access": "private",
            "tagname": "",
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 406,
            "description": "重置results list的状态",
            "access": "private",
            "tagname": "",
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 420,
            "description": "用户选定某一项后触发",
            "itemtype": "event",
            "name": "select",
            "params": [
                {
                    "name": "results",
                    "description": "{node : 触发事件的节点,result:{text:文本,display:显示的HTML代码,raw:对应的数据源}}",
                    "type": "Object"
                }
            ],
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 431,
            "description": "同步状态",
            "params": [
                {
                    "name": "e",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 483,
            "description": "判断是否在区域外的点击",
            "params": [
                {
                    "name": "target_node",
                    "description": ""
                },
                {
                    "name": "region_nodes",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 531,
            "description": "上下按钮选择时触发回调",
            "params": [
                {
                    "name": "e",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 542,
            "description": "鼠标移动到ITEM上时的回调",
            "params": [
                {
                    "name": "e",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 553,
            "description": "键盘事件回调",
            "params": [
                {
                    "name": "e",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 588,
            "description": "鼠标移入时选中指定项",
            "params": [
                {
                    "name": "item",
                    "description": ""
                }
            ],
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 598,
            "description": "通过键盘激活的下一项",
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 615,
            "description": "通过键盘激活的上一项",
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 623,
            "description": "返回节点的第一个子节点",
            "return": {
                "description": "",
                "type": "*"
            },
            "access": "private",
            "tagname": "",
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 631,
            "description": "返回节点的最后一个子节点",
            "return": {
                "description": "",
                "type": "*"
            },
            "access": "private",
            "tagname": "",
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 639,
            "description": "设定宽度值",
            "params": [
                {
                    "name": "val",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "access": "private",
            "tagname": "",
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        },
        {
            "file": "1.1/rich.js",
            "line": 656,
            "description": "对齐的配置进行默认值的处理",
            "params": [
                {
                    "name": "cfg",
                    "description": ""
                }
            ],
            "return": {
                "description": "}}",
                "type": "Node: null, points: Array, offset: Array, overflow: adjustX: number, adjustY: number"
            },
            "access": "private",
            "tagname": "",
            "class": "AutocompleteRich",
            "module": "autocomplete",
            "submodule": "autocomplete-rich"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " 1.1/aria.js:7"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " 1.1/aria.js:103"
        },
        {
            "message": "unknown tag: fileoverview",
            "line": " 1.1/index.js:1"
        },
        {
            "message": "unknown tag: fileoverview",
            "line": " 1.1/multiple.js:1"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " 1.1/multiple.js:125"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " 1.1/rich.js:10"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " 1.1/rich.js:270"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " 1.1/rich.js:282"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " 1.1/rich.js:483"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " 1.1/rich.js:623"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " 1.1/rich.js:631"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " 1.1/rich.js:639"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " 1.1/rich.js:656"
        },
        {
            "message": "Missing item type\n生成一个二维数组，数组每一项代表一个节点,完成上下左右键盘键操作功能，同时完成节点数据绑定\n[[1, 2, 3, 4, 5, 6, 7, 8],\n [9,10,11,12,13,14,15,16],\n [......................]]",
            "line": " 1.1/aria.js:103"
        },
        {
            "message": "Missing item type\n选择位于上方的节点",
            "line": " 1.1/aria.js:140"
        },
        {
            "message": "Missing item type\n选择位于下方节点",
            "line": " 1.1/aria.js:154"
        },
        {
            "message": "Missing item type\n选择左侧节点",
            "line": " 1.1/aria.js:168"
        },
        {
            "message": "Missing item type\n选择右侧节点",
            "line": " 1.1/aria.js:186"
        },
        {
            "message": "Missing item type\n选择指定坐标的节点,当一步没有找到时，根据direction进行下一步的查找",
            "line": " 1.1/aria.js:204"
        },
        {
            "message": "Missing item type\n数据源的请求模板.",
            "line": " 1.1/base.js:110"
        },
        {
            "message": "Missing item type\n数据结果过滤",
            "line": " 1.1/base.js:118"
        },
        {
            "message": "Missing item type\n数据结果初始化",
            "line": " 1.1/base.js:131"
        },
        {
            "message": "Missing item type\n存储当前的查询结果",
            "line": " 1.1/base.js:161"
        },
        {
            "message": "Missing item type\n数据源",
            "line": " 1.1/base.js:178"
        },
        {
            "message": "Missing item type\n设置输入框的值,可以用于区分是用户通过UI输入造成的valueChange还是代码通过 setValue()改变的输入框的值",
            "line": " 1.1/base.js:194"
        },
        {
            "message": "Missing item type\n渲染组件",
            "line": " 1.1/base.js:229"
        },
        {
            "message": "Missing item type\n事件处理中心",
            "line": " 1.1/base.js:236"
        },
        {
            "message": "Missing item type\nquery 事件后默认出发函数",
            "line": " 1.1/base.js:255"
        },
        {
            "message": "Missing item type\n实力的 value 属性被set后触发",
            "line": " 1.1/base.js:283"
        },
        {
            "message": "Missing item type\n数据查询返回结果后，对数据进行过滤排序，文本替换,高亮等操作",
            "line": " 1.1/base.js:340"
        },
        {
            "message": "Missing item type\n数据返回成功后的回调处理方法",
            "line": " 1.1/base.js:428"
        },
        {
            "message": "Missing item type\nsetter 启用缓存",
            "line": " 1.1/base.js:443"
        },
        {
            "message": "Missing item type\njsonp格式的数据源",
            "line": " 1.1/base.js:510"
        },
        {
            "message": "Missing item type\n设置autocomplete属性，关闭浏览器默认的自动完成功能",
            "line": " 1.1/base.js:581"
        },
        {
            "message": "Missing item type\n初始化热门推荐",
            "line": " 1.1/hot.js:245"
        },
        {
            "message": "Missing item type\nHOT的渲染",
            "line": " 1.1/hot.js:252"
        },
        {
            "message": "Missing item type\n修改hotSource时重置HOT的状态",
            "line": " 1.1/hot.js:285"
        },
        {
            "message": "Missing item type\n容器元素",
            "line": " 1.1/multiple.js:17"
        },
        {
            "message": "Missing item type\n初始化Multiple输入框dom结构调整，绑定keydown事件",
            "line": " 1.1/multiple.js:52"
        },
        {
            "message": "Missing item type\n事件绑定",
            "line": " 1.1/multiple.js:65"
        },
        {
            "message": "Missing item type\n添加item",
            "line": " 1.1/multiple.js:95"
        },
        {
            "message": "Missing item type\n删除item",
            "line": " 1.1/multiple.js:112"
        },
        {
            "message": "Missing item type\n查找item在array中的序号",
            "line": " 1.1/multiple.js:125"
        },
        {
            "message": "Missing item type\n展示已输入列表",
            "line": " 1.1/multiple.js:145"
        },
        {
            "message": "Missing item type\nRICH 包含UI所有交互逻辑",
            "line": " 1.1/rich.js:1"
        },
        {
            "message": "Missing item type\n当前的激活项",
            "line": " 1.1/rich.js:72"
        },
        {
            "message": "Missing item type\n当前的HOVER项",
            "line": " 1.1/rich.js:78"
        },
        {
            "message": "Missing item type\nmessage的可见状态",
            "line": " 1.1/rich.js:110"
        },
        {
            "message": "Missing item type\n对齐配置",
            "line": " 1.1/rich.js:116"
        },
        {
            "message": "Missing item type\n最外层容器HTML片段",
            "line": " 1.1/rich.js:154"
        },
        {
            "message": "Missing item type\n生成搜索结果列表",
            "line": " 1.1/rich.js:270"
        },
        {
            "message": "Missing item type\n创建搜索结果的子项",
            "line": " 1.1/rich.js:282"
        },
        {
            "message": "Missing item type\n绑定事件",
            "line": " 1.1/rich.js:293"
        },
        {
            "message": "Missing item type\n搜索结果列表事件绑定",
            "line": " 1.1/rich.js:331"
        },
        {
            "message": "Missing item type\n搜索结果返回时响应",
            "line": " 1.1/rich.js:348"
        },
        {
            "message": "Missing item type\n重新定位容器对齐",
            "line": " 1.1/rich.js:398"
        },
        {
            "message": "Missing item type\n重置results list的状态",
            "line": " 1.1/rich.js:406"
        },
        {
            "message": "Missing item type\n同步状态",
            "line": " 1.1/rich.js:431"
        },
        {
            "message": "Missing item type\n判断是否在区域外的点击",
            "line": " 1.1/rich.js:483"
        },
        {
            "message": "Missing item type\n上下按钮选择时触发回调",
            "line": " 1.1/rich.js:531"
        },
        {
            "message": "Missing item type\n鼠标移动到ITEM上时的回调",
            "line": " 1.1/rich.js:542"
        },
        {
            "message": "Missing item type\n键盘事件回调",
            "line": " 1.1/rich.js:553"
        },
        {
            "message": "Missing item type\n鼠标移入时选中指定项",
            "line": " 1.1/rich.js:588"
        },
        {
            "message": "Missing item type\n通过键盘激活的下一项",
            "line": " 1.1/rich.js:598"
        },
        {
            "message": "Missing item type\n通过键盘激活的上一项",
            "line": " 1.1/rich.js:615"
        },
        {
            "message": "Missing item type\n返回节点的第一个子节点",
            "line": " 1.1/rich.js:623"
        },
        {
            "message": "Missing item type\n返回节点的最后一个子节点",
            "line": " 1.1/rich.js:631"
        },
        {
            "message": "Missing item type\n设定宽度值",
            "line": " 1.1/rich.js:639"
        },
        {
            "message": "Missing item type\n对齐的配置进行默认值的处理",
            "line": " 1.1/rich.js:656"
        }
    ]
}